#include <iostream>
using namespace std;
int N, K;
int dp[201][201];
int main()
{
    cin >> N >> K;
    int ans = 0;
    for (int i = 0; i <= K; i++)
    {
        dp[i][0] = 1;
    }
    for (int i = 1; i <= K; i++)
    {
        for (int j = 1; j <= N; j++)
        {
            for (int k = 0; k <= j; k++)
            {
                dp[i][j] += dp[i - 1][j - k];
                dp[i][j] %= 1000000000;
                ans = dp[i][j];
            }
        }
    }
    cout << ans << endl;

    return 0;
}
/*
20 2

0 ~ 20 까지 2개의 정수를 더해 그 합이 20이 되는 경우의 수

0 20
1 19
2 18
3 17
4
5
6
7
8
9
10 10
11
12
13
14
15
16
17
18
19 1
20 0  => 21개

N = 20, K = 3 이라면

0 0 20
0 1 19
0 2 18
.... 21개
1로 첫 자리를 고정 했다면

19, 2 와 같다.

그 후로

2 로 고정했다면?

18, 2 와 같다.

C(N,3) = N+1 + N
C(N,2) = N+1
C(N,1) = N
C(N,0) = 1

C(6,0) = 1
C(6,1) = 6 ->
C(6,2) = 7 ->

C(4,3) = sum(5)
C(5,3) = sum(6)
C(6,3) = 1+2+3+4+5+6+7 = 28 -> sum(7)
C(6,4) =


dp[i][j] = dp[i][j-2]+ dp[i][j-1]

C(6,2) -> (0,6), (1,5), (2,4), (3,3).... (6,0) => 7개

C(6,3) -> C(6,2) + C(5,2) + C(4,2) + C(3,2) + C(2,2) + C(1,2) + C(0,2)
가장 왼쪽을 0으로 고정, 0 + _ + _ = 6 을 만족하는 2 가지의 빈칸은 C(6,2)와 같다. (7)
가장 왼쪽을 1으로 고정, 1 + _ + _ = 6 을 만족하는 2가지의 빈칸은 C(5,2)와 같다. (6)
...
.
가장 왼쪽을 4로 로정, 4+ _ + _  = 6 을 만족하는 2 가지의 빈칸은 C(2,2) 이다. -> 3개
가장 왼쪽을 5로 고정, 5+ _ + _  = 6을 만족하는 2가지의 빈칸은 C(1,2)이다. [ 0,1] [1,0] -> 2개
가장 왼쪽으로 6으로 고정, 6 + _ + _ = 6 을 만족하는 2가지의 빈칸은 C(0,2) 이다. [0,0] -> 1개
즉 C(N,2) = N+1은 자명하다.

C(N,K) K = 3 일 경우, 1 ~ N+1까지의 합과 같다. -> N+1(N+2) / 2
C(1,3) -> 1 0 0, 0 1 0, 0 0 1 = 3개
C(2, 3) ->
[0] 1 1, 0 2, 2 0  => 3
[1] 1 0, 0,1  => 2
[2] 0 0  => 1

C(2,3) = 5
1 + 2 + 3  = 6

1 ~ N 까지의 합을 sum(N) 이라고 하자. (단, N = 0 일 경우 sum(0) = 1)

C(N,K) (K > 2) 일 경우

C(N,K) = C(N,K-1) + C(N-1,K-1) + C(N-2, K-1) ... C(N-N, K-1) 와 같다.

C(N,K-1) 은 k가 2가 될 때 까지 위의 과정을 반복한 것과 같다.

C(6,4) -> C(6,3) + C(5,3)  + C(4,3) + C(3,3) + C(2,3) + C(1,3) + C(0, 3)
=> sum(7) + sum(5) + sum(3) + sum(2) ... sum(0)
6,4 ->
0 1 2 3 4 5 6
-----------------------
7 6 5 4 3 2 1 C(6,3)
                       [6,2], [5,2] [4,2] [3,2] [2,2] [1,2] [0,2]
                       [6,1], [5,1] [4,1] [3,1] [2,1] [1,1] [0,1]
                       [6,0]  [5,0] [4,0] [3,0] [2,0] [1,0] [0,0]
   6 5 4 3 2 1 C(5,3)
      5 4 3 2 1 C(4,3)
         4 3 2 1 C(3,3)
            3 2 1 C(2,3)
               2 1 C(1,3)
                  1 C(0,3)


7^1 + 6^2 + 5^3 + 4^4 + 3^5 + 2^6 + 1^7

                 N
C(6,4) = 시그마  N+1^ i
                  i = 1



C(200,200) -> C(200,199), C(199,199), C(198,199) ... C(0,199)

C(0,1) = 1
C(0,2) = 1
C(0,K) = 1

C(0,1) = 1
C(1,1) = 1
C(10,1) = 1

C(0,2) = 1
C(1,2) = 2
C(2,2) = 3



*/